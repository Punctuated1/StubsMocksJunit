plugins {
	id 'org.springframework.boot' version '2.6.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

// tag::configurations[]
configurations {
	jaxb
}
// end::configurations[]

repositories {
	mavenCentral()
	 maven {
        url "https://packages.confluent.io/maven"
    }
}

configurations.all {
    exclude  module: 'slf4j-log4j12'
}

// tag::wsdl[]
task genJaxb {
	ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
	ext.classesDir = "${buildDir}/classes/jaxb"
	ext.schema = "file:///D:/MyDocuments/workspaces/ConfigCoord/SOAP-WS/src/main/resources/wsdl/VenueRequirmentChecker.wsdl"

	outputs.dir classesDir

	doLast() {
		project.ant {
			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
					classpath: configurations.jaxb.asPath
			mkdir(dir: sourcesDir)
			mkdir(dir: classesDir)

				xjc(destdir: sourcesDir, schema: schema,
						package: "com.example.consumingwebservice.wsdl") {
						arg(value: "-wsdl")
					produces(dir: sourcesDir, includes: "**/*.java")
				}

				javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
						debugLevel: "lines,vars,source",
						classpath: configurations.jaxb.asPath) {
					src(path: sourcesDir)
					include(name: "**/*.java")
					include(name: "*.java")
					}

				copy(todir: classesDir) {
						fileset(dir: sourcesDir, erroronmissingdir: false) {
						exclude(name: "**/*.java")
				}
			}
		}
	}
}
// end::wsdl[]

dependencies {
// tag::dependency[]
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	implementation ('org.springframework.boot:spring-boot-starter-web-services') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
	implementation 'org.springframework.ws:spring-ws-core'
	// For Java 11:
	implementation 'org.glassfish.jaxb:jaxb-runtime'
	implementation(files(genJaxb.classesDir).builtBy(genJaxb))

	jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"
	
	implementation 'org.apache.kafka:kafka_2.10:0.10.2.2'
	implementation 'org.apache.avro:avro:1.11.0'
	implementation 'io.confluent:kafka-streams-avro-serde:7.1.0'
	
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation 'org.mockito:mockito-core:3.+'
//	testImplementation 'org.mock-server:mockserver-netty:5.13.2'
//	testImplementation 'org.mock-server:mockserver-spring-test-listener:5.13.2'
//	testImplementation 'org.mock-server:mockserver-client-java-no-dependencies:5.13.2'
    testImplementation group: 'org.springframework.ws', name: 'spring-ws-test', version: '3.1.3'	
// end::dependency[]
}

test {
	useJUnitPlatform()
}

// tag::bootjar[]
bootJar {
	baseName = 'gs-consuming-web-service'
	version =  '0.0.1'
}
// end::bootjar[]

